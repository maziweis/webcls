//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kingsun.SmarterClassroom.API.BasicService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="C_UserInfo", Namespace="http://schemas.datacontract.org/2004/07/Fz.Core.WcfService")]
    [System.SerializableAttribute()]
    public partial class C_UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kingsun.SmarterClassroom.API.BasicService.C_UserClass[] userClassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((this.SubjectField.Equals(value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kingsun.SmarterClassroom.API.BasicService.C_UserClass[] userClass {
            get {
                return this.userClassField;
            }
            set {
                if ((object.ReferenceEquals(this.userClassField, value) != true)) {
                    this.userClassField = value;
                    this.RaisePropertyChanged("userClass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="C_UserClass", Namespace="http://schemas.datacontract.org/2004/07/Fz.Core.WcfService")]
    [System.SerializableAttribute()]
    public partial class C_UserClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClassIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClassId {
            get {
                return this.ClassIdField;
            }
            set {
                if ((this.ClassIdField.Equals(value) != true)) {
                    this.ClassIdField = value;
                    this.RaisePropertyChanged("ClassId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GradeId {
            get {
                return this.GradeIdField;
            }
            set {
                if ((this.GradeIdField.Equals(value) != true)) {
                    this.GradeIdField = value;
                    this.RaisePropertyChanged("GradeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GradeName {
            get {
                return this.GradeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeNameField, value) != true)) {
                    this.GradeNameField = value;
                    this.RaisePropertyChanged("GradeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="C_Textbook", Namespace="http://schemas.datacontract.org/2004/07/Fz.Core.WcfService")]
    [System.SerializableAttribute()]
    public partial class C_Textbook : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookCoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookConfig {
            get {
                return this.BookConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.BookConfigField, value) != true)) {
                    this.BookConfigField = value;
                    this.RaisePropertyChanged("BookConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookCover {
            get {
                return this.BookCoverField;
            }
            set {
                if ((object.ReferenceEquals(this.BookCoverField, value) != true)) {
                    this.BookCoverField = value;
                    this.RaisePropertyChanged("BookCover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookName {
            get {
                return this.BookNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BookNameField, value) != true)) {
                    this.BookNameField = value;
                    this.RaisePropertyChanged("BookName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Booklet {
            get {
                return this.BookletField;
            }
            set {
                if ((this.BookletField.Equals(value) != true)) {
                    this.BookletField = value;
                    this.RaisePropertyChanged("Booklet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Edition {
            get {
                return this.EditionField;
            }
            set {
                if ((this.EditionField.Equals(value) != true)) {
                    this.EditionField = value;
                    this.RaisePropertyChanged("Edition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stage {
            get {
                return this.StageField;
            }
            set {
                if ((this.StageField.Equals(value) != true)) {
                    this.StageField = value;
                    this.RaisePropertyChanged("Stage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((this.SubjectField.Equals(value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="C_TextbookCatalog", Namespace="http://schemas.datacontract.org/2004/07/Fz.Core.WcfService")]
    [System.SerializableAttribute()]
    public partial class C_TextbookCatalog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PId {
            get {
                return this.PIdField;
            }
            set {
                if ((this.PIdField.Equals(value) != true)) {
                    this.PIdField = value;
                    this.RaisePropertyChanged("PId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageEnd {
            get {
                return this.PageEndField;
            }
            set {
                if ((this.PageEndField.Equals(value) != true)) {
                    this.PageEndField = value;
                    this.RaisePropertyChanged("PageEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageStart {
            get {
                return this.PageStartField;
            }
            set {
                if ((this.PageStartField.Equals(value) != true)) {
                    this.PageStartField = value;
                    this.RaisePropertyChanged("PageStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="R_Resource", Namespace="http://schemas.datacontract.org/2004/07/Fz.Core.WcfService.Contracts")]
    [System.SerializableAttribute()]
    public partial class R_Resource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BookReelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreviaryImgUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EditionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyWordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResourceCreaterDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceCreaterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceCreaterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ResourceSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResourceStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResourceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SchoolStageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubjectIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BookReelID {
            get {
                return this.BookReelIDField;
            }
            set {
                if ((this.BookReelIDField.Equals(value) != true)) {
                    this.BookReelIDField = value;
                    this.RaisePropertyChanged("BookReelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BreviaryImgUrl {
            get {
                return this.BreviaryImgUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.BreviaryImgUrlField, value) != true)) {
                    this.BreviaryImgUrlField = value;
                    this.RaisePropertyChanged("BreviaryImgUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Catalog {
            get {
                return this.CatalogField;
            }
            set {
                if ((this.CatalogField.Equals(value) != true)) {
                    this.CatalogField = value;
                    this.RaisePropertyChanged("Catalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EditionID {
            get {
                return this.EditionIDField;
            }
            set {
                if ((this.EditionIDField.Equals(value) != true)) {
                    this.EditionIDField = value;
                    this.RaisePropertyChanged("EditionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FileIDField, value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GradeID {
            get {
                return this.GradeIDField;
            }
            set {
                if ((this.GradeIDField.Equals(value) != true)) {
                    this.GradeIDField = value;
                    this.RaisePropertyChanged("GradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyWords {
            get {
                return this.KeyWordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyWordsField, value) != true)) {
                    this.KeyWordsField = value;
                    this.RaisePropertyChanged("KeyWords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResourceCreaterDate {
            get {
                return this.ResourceCreaterDateField;
            }
            set {
                if ((this.ResourceCreaterDateField.Equals(value) != true)) {
                    this.ResourceCreaterDateField = value;
                    this.RaisePropertyChanged("ResourceCreaterDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceCreaterID {
            get {
                return this.ResourceCreaterIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceCreaterIDField, value) != true)) {
                    this.ResourceCreaterIDField = value;
                    this.RaisePropertyChanged("ResourceCreaterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceCreaterName {
            get {
                return this.ResourceCreaterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceCreaterNameField, value) != true)) {
                    this.ResourceCreaterNameField = value;
                    this.RaisePropertyChanged("ResourceCreaterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceName {
            get {
                return this.ResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNameField, value) != true)) {
                    this.ResourceNameField = value;
                    this.RaisePropertyChanged("ResourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ResourceSize {
            get {
                return this.ResourceSizeField;
            }
            set {
                if ((this.ResourceSizeField.Equals(value) != true)) {
                    this.ResourceSizeField = value;
                    this.RaisePropertyChanged("ResourceSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ResourceStyle {
            get {
                return this.ResourceStyleField;
            }
            set {
                if ((this.ResourceStyleField.Equals(value) != true)) {
                    this.ResourceStyleField = value;
                    this.RaisePropertyChanged("ResourceStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ResourceType {
            get {
                return this.ResourceTypeField;
            }
            set {
                if ((this.ResourceTypeField.Equals(value) != true)) {
                    this.ResourceTypeField = value;
                    this.RaisePropertyChanged("ResourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SchoolStage {
            get {
                return this.SchoolStageField;
            }
            set {
                if ((this.SchoolStageField.Equals(value) != true)) {
                    this.SchoolStageField = value;
                    this.RaisePropertyChanged("SchoolStage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((this.SubjectIDField.Equals(value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicService.IBasicService")]
    public interface IBasicService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/CheckLogin", ReplyAction="http://tempuri.org/IBasicService/CheckLoginResponse")]
        int CheckLogin(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/CheckLogin", ReplyAction="http://tempuri.org/IBasicService/CheckLoginResponse")]
        System.Threading.Tasks.Task<int> CheckLoginAsync(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetUserInfo", ReplyAction="http://tempuri.org/IBasicService/GetUserInfoResponse")]
        Kingsun.SmarterClassroom.API.BasicService.C_UserInfo GetUserInfo(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetUserInfo", ReplyAction="http://tempuri.org/IBasicService/GetUserInfoResponse")]
        System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.C_UserInfo> GetUserInfoAsync(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetAccount", ReplyAction="http://tempuri.org/IBasicService/GetAccountResponse")]
        string GetAccount(string ticket, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetAccount", ReplyAction="http://tempuri.org/IBasicService/GetAccountResponse")]
        System.Threading.Tasks.Task<string> GetAccountAsync(string ticket, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetUserAndSubjectDict", ReplyAction="http://tempuri.org/IBasicService/GetUserAndSubjectDictResponse")]
        System.Collections.Generic.Dictionary<string, string> GetUserAndSubjectDict();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetUserAndSubjectDict", ReplyAction="http://tempuri.org/IBasicService/GetUserAndSubjectDictResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetUserAndSubjectDictAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetSubjectDict", ReplyAction="http://tempuri.org/IBasicService/GetSubjectDictResponse")]
        System.Collections.Generic.Dictionary<int, string> GetSubjectDict();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetSubjectDict", ReplyAction="http://tempuri.org/IBasicService/GetSubjectDictResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetSubjectDictAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetGradeDict", ReplyAction="http://tempuri.org/IBasicService/GetGradeDictResponse")]
        System.Collections.Generic.Dictionary<int, string> GetGradeDict();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetGradeDict", ReplyAction="http://tempuri.org/IBasicService/GetGradeDictResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetGradeDictAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetGradeDictByEdition", ReplyAction="http://tempuri.org/IBasicService/GetGradeDictByEditionResponse")]
        System.Collections.Generic.Dictionary<int, string> GetGradeDictByEdition(int edition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetGradeDictByEdition", ReplyAction="http://tempuri.org/IBasicService/GetGradeDictByEditionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetGradeDictByEditionAsync(int edition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetClassDict", ReplyAction="http://tempuri.org/IBasicService/GetClassDictResponse")]
        System.Collections.Generic.Dictionary<int, string> GetClassDict(int grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetClassDict", ReplyAction="http://tempuri.org/IBasicService/GetClassDictResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetClassDictAsync(int grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetStudentByClassId", ReplyAction="http://tempuri.org/IBasicService/GetStudentByClassIdResponse")]
        System.Collections.Generic.Dictionary<string, string> GetStudentByClassId(int classId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetStudentByClassId", ReplyAction="http://tempuri.org/IBasicService/GetStudentByClassIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStudentByClassIdAsync(int classId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookById", ReplyAction="http://tempuri.org/IBasicService/GetTextbookByIdResponse")]
        Kingsun.SmarterClassroom.API.BasicService.C_Textbook GetTextbookById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookById", ReplyAction="http://tempuri.org/IBasicService/GetTextbookByIdResponse")]
        System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.C_Textbook> GetTextbookByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookDict", ReplyAction="http://tempuri.org/IBasicService/GetTextbookDictResponse")]
        Kingsun.SmarterClassroom.API.BasicService.C_Textbook[] GetTextbookDict(System.Nullable<int> Stage, System.Nullable<int> Subject, System.Nullable<int> Grade, System.Nullable<int> Booklet, System.Nullable<int> Edition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookDict", ReplyAction="http://tempuri.org/IBasicService/GetTextbookDictResponse")]
        System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.C_Textbook[]> GetTextbookDictAsync(System.Nullable<int> Stage, System.Nullable<int> Subject, System.Nullable<int> Grade, System.Nullable<int> Booklet, System.Nullable<int> Edition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookCatalogDict", ReplyAction="http://tempuri.org/IBasicService/GetTextbookCatalogDictResponse")]
        Kingsun.SmarterClassroom.API.BasicService.C_TextbookCatalog[] GetTextbookCatalogDict(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookCatalogDict", ReplyAction="http://tempuri.org/IBasicService/GetTextbookCatalogDictResponse")]
        System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.C_TextbookCatalog[]> GetTextbookCatalogDictAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookPageDict", ReplyAction="http://tempuri.org/IBasicService/GetTextbookPageDictResponse")]
        int[] GetTextbookPageDict(int CatalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookPageDict", ReplyAction="http://tempuri.org/IBasicService/GetTextbookPageDictResponse")]
        System.Threading.Tasks.Task<int[]> GetTextbookPageDictAsync(int CatalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/SaveTextbookResource", ReplyAction="http://tempuri.org/IBasicService/SaveTextbookResourceResponse")]
        void SaveTextbookResource(int bookId, int page, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/SaveTextbookResource", ReplyAction="http://tempuri.org/IBasicService/SaveTextbookResourceResponse")]
        System.Threading.Tasks.Task SaveTextbookResourceAsync(int bookId, int page, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookResource", ReplyAction="http://tempuri.org/IBasicService/GetTextbookResourceResponse")]
        string[] GetTextbookResource(int bookId, int[] pages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetTextbookResource", ReplyAction="http://tempuri.org/IBasicService/GetTextbookResourceResponse")]
        System.Threading.Tasks.Task<string[]> GetTextbookResourceAsync(int bookId, int[] pages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetEditionDict", ReplyAction="http://tempuri.org/IBasicService/GetEditionDictResponse")]
        System.Collections.Generic.Dictionary<int, string> GetEditionDict();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetEditionDict", ReplyAction="http://tempuri.org/IBasicService/GetEditionDictResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetEditionDictAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetEditionDictBySubject", ReplyAction="http://tempuri.org/IBasicService/GetEditionDictBySubjectResponse")]
        System.Collections.Generic.Dictionary<int, string> GetEditionDictBySubject(int subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetEditionDictBySubject", ReplyAction="http://tempuri.org/IBasicService/GetEditionDictBySubjectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetEditionDictBySubjectAsync(int subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetResourceType", ReplyAction="http://tempuri.org/IBasicService/GetResourceTypeResponse")]
        System.Collections.Generic.Dictionary<int, string> GetResourceType(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetResourceType", ReplyAction="http://tempuri.org/IBasicService/GetResourceTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetResourceTypeAsync(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/UpdateTextbook", ReplyAction="http://tempuri.org/IBasicService/UpdateTextbookResponse")]
        void UpdateTextbook(int id, int stage, int subject, int grade, int booklet, int edition, string bookName, string config, string cover, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/UpdateTextbook", ReplyAction="http://tempuri.org/IBasicService/UpdateTextbookResponse")]
        System.Threading.Tasks.Task UpdateTextbookAsync(int id, int stage, int subject, int grade, int booklet, int edition, string bookName, string config, string cover, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetResourceByCatalogIds", ReplyAction="http://tempuri.org/IBasicService/GetResourceByCatalogIdsResponse")]
        Kingsun.SmarterClassroom.API.BasicService.R_Resource[] GetResourceByCatalogIds(string CatalogIds, System.Nullable<int> type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetResourceByCatalogIds", ReplyAction="http://tempuri.org/IBasicService/GetResourceByCatalogIdsResponse")]
        System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.R_Resource[]> GetResourceByCatalogIdsAsync(string CatalogIds, System.Nullable<int> type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetResourceByKey", ReplyAction="http://tempuri.org/IBasicService/GetResourceByKeyResponse")]
        Kingsun.SmarterClassroom.API.BasicService.R_Resource[] GetResourceByKey(string key, int SubjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetResourceByKey", ReplyAction="http://tempuri.org/IBasicService/GetResourceByKeyResponse")]
        System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.R_Resource[]> GetResourceByKeyAsync(string key, int SubjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetResourceByUserID", ReplyAction="http://tempuri.org/IBasicService/GetResourceByUserIDResponse")]
        Kingsun.SmarterClassroom.API.BasicService.R_Resource[] GetResourceByUserID(string UserID, string CatalogIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/GetResourceByUserID", ReplyAction="http://tempuri.org/IBasicService/GetResourceByUserIDResponse")]
        System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.R_Resource[]> GetResourceByUserIDAsync(string UserID, string CatalogIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/RemoveResourceByResourceIDs", ReplyAction="http://tempuri.org/IBasicService/RemoveResourceByResourceIDsResponse")]
        bool RemoveResourceByResourceIDs(string ResourceIDs, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicService/RemoveResourceByResourceIDs", ReplyAction="http://tempuri.org/IBasicService/RemoveResourceByResourceIDsResponse")]
        System.Threading.Tasks.Task<bool> RemoveResourceByResourceIDsAsync(string ResourceIDs, string UserID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasicServiceChannel : Kingsun.SmarterClassroom.API.BasicService.IBasicService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasicServiceClient : System.ServiceModel.ClientBase<Kingsun.SmarterClassroom.API.BasicService.IBasicService>, Kingsun.SmarterClassroom.API.BasicService.IBasicService {
        
        public BasicServiceClient() {
        }
        
        public BasicServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasicServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CheckLogin(string account, string password) {
            return base.Channel.CheckLogin(account, password);
        }
        
        public System.Threading.Tasks.Task<int> CheckLoginAsync(string account, string password) {
            return base.Channel.CheckLoginAsync(account, password);
        }
        
        public Kingsun.SmarterClassroom.API.BasicService.C_UserInfo GetUserInfo(string account) {
            return base.Channel.GetUserInfo(account);
        }
        
        public System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.C_UserInfo> GetUserInfoAsync(string account) {
            return base.Channel.GetUserInfoAsync(account);
        }
        
        public string GetAccount(string ticket, string ip) {
            return base.Channel.GetAccount(ticket, ip);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountAsync(string ticket, string ip) {
            return base.Channel.GetAccountAsync(ticket, ip);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetUserAndSubjectDict() {
            return base.Channel.GetUserAndSubjectDict();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetUserAndSubjectDictAsync() {
            return base.Channel.GetUserAndSubjectDictAsync();
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetSubjectDict() {
            return base.Channel.GetSubjectDict();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetSubjectDictAsync() {
            return base.Channel.GetSubjectDictAsync();
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetGradeDict() {
            return base.Channel.GetGradeDict();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetGradeDictAsync() {
            return base.Channel.GetGradeDictAsync();
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetGradeDictByEdition(int edition) {
            return base.Channel.GetGradeDictByEdition(edition);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetGradeDictByEditionAsync(int edition) {
            return base.Channel.GetGradeDictByEditionAsync(edition);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetClassDict(int grade) {
            return base.Channel.GetClassDict(grade);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetClassDictAsync(int grade) {
            return base.Channel.GetClassDictAsync(grade);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetStudentByClassId(int classId) {
            return base.Channel.GetStudentByClassId(classId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStudentByClassIdAsync(int classId) {
            return base.Channel.GetStudentByClassIdAsync(classId);
        }
        
        public Kingsun.SmarterClassroom.API.BasicService.C_Textbook GetTextbookById(int id) {
            return base.Channel.GetTextbookById(id);
        }
        
        public System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.C_Textbook> GetTextbookByIdAsync(int id) {
            return base.Channel.GetTextbookByIdAsync(id);
        }
        
        public Kingsun.SmarterClassroom.API.BasicService.C_Textbook[] GetTextbookDict(System.Nullable<int> Stage, System.Nullable<int> Subject, System.Nullable<int> Grade, System.Nullable<int> Booklet, System.Nullable<int> Edition) {
            return base.Channel.GetTextbookDict(Stage, Subject, Grade, Booklet, Edition);
        }
        
        public System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.C_Textbook[]> GetTextbookDictAsync(System.Nullable<int> Stage, System.Nullable<int> Subject, System.Nullable<int> Grade, System.Nullable<int> Booklet, System.Nullable<int> Edition) {
            return base.Channel.GetTextbookDictAsync(Stage, Subject, Grade, Booklet, Edition);
        }
        
        public Kingsun.SmarterClassroom.API.BasicService.C_TextbookCatalog[] GetTextbookCatalogDict(int bookId) {
            return base.Channel.GetTextbookCatalogDict(bookId);
        }
        
        public System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.C_TextbookCatalog[]> GetTextbookCatalogDictAsync(int bookId) {
            return base.Channel.GetTextbookCatalogDictAsync(bookId);
        }
        
        public int[] GetTextbookPageDict(int CatalogId) {
            return base.Channel.GetTextbookPageDict(CatalogId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetTextbookPageDictAsync(int CatalogId) {
            return base.Channel.GetTextbookPageDictAsync(CatalogId);
        }
        
        public void SaveTextbookResource(int bookId, int page, string content) {
            base.Channel.SaveTextbookResource(bookId, page, content);
        }
        
        public System.Threading.Tasks.Task SaveTextbookResourceAsync(int bookId, int page, string content) {
            return base.Channel.SaveTextbookResourceAsync(bookId, page, content);
        }
        
        public string[] GetTextbookResource(int bookId, int[] pages) {
            return base.Channel.GetTextbookResource(bookId, pages);
        }
        
        public System.Threading.Tasks.Task<string[]> GetTextbookResourceAsync(int bookId, int[] pages) {
            return base.Channel.GetTextbookResourceAsync(bookId, pages);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetEditionDict() {
            return base.Channel.GetEditionDict();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetEditionDictAsync() {
            return base.Channel.GetEditionDictAsync();
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetEditionDictBySubject(int subject) {
            return base.Channel.GetEditionDictBySubject(subject);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetEditionDictBySubjectAsync(int subject) {
            return base.Channel.GetEditionDictBySubjectAsync(subject);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetResourceType(int pid) {
            return base.Channel.GetResourceType(pid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetResourceTypeAsync(int pid) {
            return base.Channel.GetResourceTypeAsync(pid);
        }
        
        public void UpdateTextbook(int id, int stage, int subject, int grade, int booklet, int edition, string bookName, string config, string cover, string remark) {
            base.Channel.UpdateTextbook(id, stage, subject, grade, booklet, edition, bookName, config, cover, remark);
        }
        
        public System.Threading.Tasks.Task UpdateTextbookAsync(int id, int stage, int subject, int grade, int booklet, int edition, string bookName, string config, string cover, string remark) {
            return base.Channel.UpdateTextbookAsync(id, stage, subject, grade, booklet, edition, bookName, config, cover, remark);
        }
        
        public Kingsun.SmarterClassroom.API.BasicService.R_Resource[] GetResourceByCatalogIds(string CatalogIds, System.Nullable<int> type) {
            return base.Channel.GetResourceByCatalogIds(CatalogIds, type);
        }
        
        public System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.R_Resource[]> GetResourceByCatalogIdsAsync(string CatalogIds, System.Nullable<int> type) {
            return base.Channel.GetResourceByCatalogIdsAsync(CatalogIds, type);
        }
        
        public Kingsun.SmarterClassroom.API.BasicService.R_Resource[] GetResourceByKey(string key, int SubjectID) {
            return base.Channel.GetResourceByKey(key, SubjectID);
        }
        
        public System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.R_Resource[]> GetResourceByKeyAsync(string key, int SubjectID) {
            return base.Channel.GetResourceByKeyAsync(key, SubjectID);
        }
        
        public Kingsun.SmarterClassroom.API.BasicService.R_Resource[] GetResourceByUserID(string UserID, string CatalogIds) {
            return base.Channel.GetResourceByUserID(UserID, CatalogIds);
        }
        
        public System.Threading.Tasks.Task<Kingsun.SmarterClassroom.API.BasicService.R_Resource[]> GetResourceByUserIDAsync(string UserID, string CatalogIds) {
            return base.Channel.GetResourceByUserIDAsync(UserID, CatalogIds);
        }
        
        public bool RemoveResourceByResourceIDs(string ResourceIDs, string UserID) {
            return base.Channel.RemoveResourceByResourceIDs(ResourceIDs, UserID);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveResourceByResourceIDsAsync(string ResourceIDs, string UserID) {
            return base.Channel.RemoveResourceByResourceIDsAsync(ResourceIDs, UserID);
        }
    }
}
